set nocompatible

" Install Plug if not already loaded
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

function! Cond(cond, ...)
  let opts = get(a:000, 0, {})
  return a:cond ? opts : extend(opts, { 'on': [], 'for': [] })
endfunction

call plug#begin()

Plug 'tpope/vim-sensible'
Plug 'tomtom/tcomment_vim'
Plug 'kana/vim-textobj-user'
Plug 'rhysd/vim-textobj-ruby'
Plug 'tpope/vim-surround'
Plug 'Raimondi/delimitMate'
Plug 'tpope/vim-repeat'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'milkypostman/vim-togglelist'
Plug 'jeffkreeftmeijer/vim-numbertoggle'
Plug 'tpope/vim-dispatch'
Plug 'thalesmello/vim-sleuth'
Plug 'terryma/vim-multiple-cursors'
Plug 'christoomey/vim-tmux-navigator'
Plug 'tpope/vim-endwise'
Plug 'easymotion/vim-easymotion'
Plug 'bronson/vim-visual-star-search'
Plug 'thalesmello/vim-indent-object'
Plug 'kana/vim-textobj-indent'
Plug 'thalesmello/vim-unimpaired'
Plug 'godlygeek/tabular'
Plug 'kana/vim-textobj-function'
Plug 'bps/vim-textobj-python'
Plug 'glts/vim-textobj-comment'
Plug 'kana/vim-textobj-line'
Plug 'Julian/vim-textobj-variable-segment'
Plug 'kana/vim-textobj-entire'
Plug 'poetic/vim-textobj-javascript'
Plug 'thinca/vim-textobj-function-javascript'
Plug 'AndrewRadev/splitjoin.vim'
Plug 'sgur/vim-textobj-parameter'
Plug 'saaguero/vim-textobj-pastedtext'
Plug 'saihoooooooo/vim-textobj-space'
Plug 'tpope/vim-speeddating'
Plug 'sjl/vitality.vim'
Plug 'ConradIrwin/vim-bracketed-paste'
Plug 'Shougo/deoplete.nvim',            Cond(has('nvim'))
Plug 'thalesmello/webcomplete.vim',     Cond(has('nvim'))
Plug 'wellle/tmux-complete.vim'
Plug 'tomasr/molokai'


call plug#end()

function! PendingPlugInstall()
  if !empty(filter(copy(g:plugs), '!isdirectory(v:val.dir)'))
    PlugInstall

    if has('nvim')
      UpdateRemotePlugins
    endif
  endif
endfunction

autocmd VimEnter * call PendingPlugInstall()


inoremap <up> <c-p>
inoremap <down> <c-n>
let mapleader = "\<space>"
map H ^
map L $
nnoremap <leader><cr> mz?\v(".*"\|'.*')<cr>"qyl`zi<c-r>q +<cr><c-r>q<esc>
nnoremap <leader>yy gv"+y
vnoremap <leader>yy "+y
nnoremap <leader>pp "+p
vnoremap <leader>pp "+p
nnoremap <leader>PP "+P
vnoremap <leader>PP "+P
vnoremap <c-c> "+y
nnoremap <leader>o `>
nmap <leader>/ *N
vmap <leader>/ *N
vmap <leader>c/ *Ncgn
nmap <leader>c/ *Ncgn
nnoremap Y y$
nnoremap <leader>; A;<esc>
nnoremap <S-ScrollWheelUp>   <ScrollWheelLeft>
nnoremap <S-2-ScrollWheelUp> <2-ScrollWheelLeft>
nnoremap <S-3-ScrollWheelUp> <3-ScrollWheelLeft>
nnoremap <S-4-ScrollWheelUp> <4-ScrollWheelLeft>
nnoremap <S-ScrollWheelDown>     <ScrollWheelRight>
nnoremap <S-2-ScrollWheelDown>   <2-ScrollWheelRight>
nnoremap <S-3-ScrollWheelDown>   <3-ScrollWheelRight>
nnoremap <S-4-ScrollWheelDown>   <4-ScrollWheelRight>
nnoremap <leader>d :q<cr>
nnoremap <leader>ss :w<cr>
map ; <Plug>(easymotion-prefix)
nmap f <Plug>(easymotion-bd-f)
xmap f <Plug>(easymotion-bd-f)
omap f <Plug>(easymotion-bd-f)

set background=dark
colorscheme molokai

call textobj#user#map('indent', {
      \      '-': {
      \        'select-a': 'ai',
      \        'select-i': 'ii'
      \      }
      \    })
let g:textobj_indent_no_default_key_mappings = 1

if has('nvim')
    set termguicolors
    let $NVIM_TUI_ENABLE_CURSOR_SHAPE = 1
    let g:deoplete#enable_at_startup = 1
    call deoplete#enable()
endif
