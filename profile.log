FUNCTION  <SNR>32_on_window_changed()
Called 1 time
Total time:   0.000021
 Self time:   0.000021

count  total (s)   self (s)
    1              0.000002   if pumvisible() && (!&previewwindow || g:airline_exclude_preview)
                                return
                              endif
                              " Handle each window only once, since we might come here several times for
                              " different autocommands.
    1              0.000005   let l:key = [bufnr('%'), winnr(), winnr('$'), tabpagenr()]
    1              0.000008   if get(g:, 'airline_last_window_changed', []) == l:key && &stl is# '%!airline#statusline('.winnr().')'
    1              0.000001     return
                              endif
                              let g:airline_last_window_changed = l:key
                              call s:init()
                              call airline#update_statusline()

FUNCTION  <SNR>36_can_diffoff()
Called 1 time
Total time:   0.000007
 Self time:   0.000007

count  total (s)   self (s)
    1              0.000007   return getwinvar(bufwinnr(a:buf), '&diff') && !empty(getbufvar(a:buf, 'git_dir')) && !empty(getwinvar(bufwinnr(a:buf), 'fugitive_diff_restore'))

FUNCTION  airline#extensions#tabline#buflist#invalidate()
Called 1 time
Total time:   0.000003
 Self time:   0.000003

count  total (s)   self (s)
    1              0.000002   unlet! s:current_buffer_list

FUNCTIONS SORTED ON TOTAL TIME
count  total (s)   self (s)  function
    1   0.000021             <SNR>32_on_window_changed()
    1   0.000007             <SNR>36_can_diffoff()
    1   0.000003             airline#extensions#tabline#buflist#invalidate()

FUNCTIONS SORTED ON SELF TIME
count  total (s)   self (s)  function
    1              0.000021  <SNR>32_on_window_changed()
    1              0.000007  <SNR>36_can_diffoff()
    1              0.000003  airline#extensions#tabline#buflist#invalidate()

