# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 120

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# on-focus-changed = ['move-mouse window-lazy-center']
exec-on-workspace-change = ['/opt/homebrew/bin/fish', '-c', 'chrome-pip-ws-change.sh']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''
# ctrl-alt-cmd-enter = 'fullscreen'
ctrl-alt-cmd-backtick = 'fullscreen'
ctrl-alt-cmd-m = 'macos-native-minimize'


# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-alt-cmd-period = 'layout tiles horizontal vertical'
ctrl-alt-cmd-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-cmd-h = ['focus --boundaries all-monitors-outer-frame left', 'move-mouse window-lazy-center']
ctrl-alt-cmd-j = ['focus --boundaries all-monitors-outer-frame down', 'move-mouse window-lazy-center']
ctrl-alt-cmd-k = ['focus --boundaries all-monitors-outer-frame up', 'move-mouse window-lazy-center']
ctrl-alt-cmd-l = ['focus --boundaries all-monitors-outer-frame right', 'move-mouse window-lazy-center']

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-alt-cmd-shift-h = ['move left']
ctrl-alt-cmd-shift-j = ['move down']
ctrl-alt-cmd-shift-k = ['move up']
ctrl-alt-cmd-shift-l = ['move right']

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-alt-cmd-minus = 'resize smart -100'
ctrl-alt-cmd-equal = 'resize smart +100'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-alt-cmd-1 = 'workspace 1'
ctrl-alt-cmd-2 = 'workspace 2'
ctrl-alt-cmd-3 = 'workspace 3'
ctrl-alt-cmd-4 = 'workspace 4'
ctrl-alt-cmd-5 = 'workspace 5'
ctrl-alt-cmd-6 = 'workspace 6'
ctrl-alt-cmd-7 = 'workspace 7'
ctrl-alt-cmd-8 = 'workspace 8'
ctrl-alt-cmd-9 = 'workspace 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-alt-cmd-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
ctrl-alt-cmd-shift-2 = 'move-node-to-workspace --focus-follows-window 2'
ctrl-alt-cmd-shift-3 = 'move-node-to-workspace --focus-follows-window 3'
ctrl-alt-cmd-shift-4 = 'move-node-to-workspace --focus-follows-window 4'
ctrl-alt-cmd-shift-5 = 'move-node-to-workspace --focus-follows-window 5'
ctrl-alt-cmd-shift-6 = 'move-node-to-workspace --focus-follows-window 6'
ctrl-alt-cmd-shift-7 = 'move-node-to-workspace --focus-follows-window 7'
ctrl-alt-cmd-shift-8 = 'move-node-to-workspace --focus-follows-window 8'
ctrl-alt-cmd-shift-9 = 'move-node-to-workspace --focus-follows-window 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
ctrl-alt-cmd-tab = ['exec-and-forget aerospace focus-back-and-forth && aerospace fullscreen on || aerospace workspace-back-and-forth'] # reset layout

ctrl-alt-cmd-n = ['workspace --wrap-around next'] # reset layout
ctrl-alt-cmd-p = ['workspace --wrap-around prev'] # Toggle between floating and tiling layout
ctrl-alt-cmd-shift-n = ['move-node-to-workspace --wrap-around --focus-follows-window next'] # reset layout
ctrl-alt-cmd-shift-p = ['move-node-to-workspace --wrap-around --focus-follows-window prev'] # Toggle between floating and tiling layout

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-alt-cmd-space = 'mode service'
cmd-esc = 'workspace-back-and-forth'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
enter = ['mode main']
ctrl-alt-cmd-space = ['fullscreen', 'mode main']
space = ['fullscreen', 'mode main']

esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
tab = ['move-workspace-to-monitor --wrap-around next', 'mode main']
backtick = ['move-node-to-monitor --wrap-around next', 'mode main']
ctrl-alt-cmd-n = ['move-node-to-monitor --wrap-around --focus-follows-window next', 'mode main'] # reset layout
ctrl-alt-cmd-p = ['move-node-to-monitor --wrap-around --focus-follows-window prev', 'mode main'] # Toggle between floating and tiling layout
equal = ['balance-sizes', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
1 = ['move-node-to-workspace 1', 'mode main']
2 = ['move-node-to-workspace 2', 'mode main']
3 = ['move-node-to-workspace 3', 'mode main']
4 = ['move-node-to-workspace 4', 'mode main']
5 = ['move-node-to-workspace 5', 'mode main']
6 = ['move-node-to-workspace 6', 'mode main']
7 = ['move-node-to-workspace 7', 'mode main']
8 = ['move-node-to-workspace 8', 'mode main']
9 = ['move-node-to-workspace 9', 'mode main']


# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = [''layout sticky tiling'', 'mode main']

ctrl-alt-cmd-h = ['join-with left', 'mode main']
ctrl-alt-cmd-j = ['join-with down', 'mode main']
ctrl-alt-cmd-k = ['join-with up', 'mode main']
ctrl-alt-cmd-l = ['join-with right', 'mode main']

h = ['focus-monitor left', 'mode main']
j = ['focus-monitor down', 'mode main']
k = ['focus-monitor up', 'mode main']
l = ['focus-monitor right', 'mode main']

shift-h = ['move-node-to-monitor --focus-follows-window left', 'mode main']
shift-j = ['move-node-to-monitor --focus-follows-window down', 'mode main']
shift-k = ['move-node-to-monitor --focus-follows-window up', 'mode main']
shift-l = ['move-node-to-monitor --focus-follows-window right', 'mode main']


# Window detected events

# Not supported yet :(
# [[on-window-detected]]
# if.app-id = 'us.zoom.xos'
# if.window-title-regex-substring = 'Login'
# run = ['macos-native-minimize']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.cisco.secureclient.gui'
run = 'layout floating'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
if.during-aerospace-startup = true
run = ['move-node-to-workspace 2']  # The callback itself
check-further-callbacks = true


# Reference on-window-detected
# # Workspace monitor configs
# [[on-window-detected]]
# if.app-id = 'com.apple.systempreferences'
# if.app-name-regex-substring = 'settings'
# if.window-title-regex-substring = 'substring'
# if.workspace = 'workspace-name'
# if.during-aerospace-startup = true
# check-further-callbacks = true
# run = ['layout floating', 'move-node-to-workspace S']  # The callback itself
# run = 'move-node-to-workspace T' # mnemonics T - Terminal

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.window-title-regex-substring = 'Picture in Picture'
run = ['layout floating']  # The callback itself
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.facebook.fbvscode'
if.during-aerospace-startup = true
run = ['move-node-to-workspace 2']  # The callback itself
check-further-callbacks = true

[[on-window-detected]]
if.app-name-regex-substring = 'Workplace'
run = ['move-node-to-workspace 3']  # The callback itself
check-further-callbacks = true


[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['move-node-to-workspace 4']  # The callback itself
check-further-callbacks = true

[[on-window-detected]]
if.app-name-regex-substring = 'Google Keep'
run = ['move-node-to-workspace 4']  # The callback itself
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
if.window-title-regex-substring = 'Updating iTerm2'
run = 'layout floating'
check-further-callbacks = true



[[on-window-detected]]
if.app-name-regex-substring = 'YouTube Music'
run = ['move-node-to-workspace 9']  # The callback itself
check-further-callbacks = true

[[on-window-detected]]
if.app-name-regex-substring = 'Metamate'
run = ['layout floating']  # The callback itself
check-further-callbacks = true

[[on-window-detected]]
if.app-name-regex-substring = 'PomoFocus'
run = ['move-node-to-workspace 9']  # The callback itself
check-further-callbacks = true


[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['move-node-to-workspace 8']  # The callback itself
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['move-node-to-workspace 8']  # The callback itself
check-further-callbacks = true


[workspace-to-monitor-force-assignment]
# 1 = 1                            # Monitor sequence number from left to right. 1-based indexing
# 2 = 'main'                       # Main monitor
# 3 = 'secondary'                  # Non-main monitor in case when there are only two monitors
# 4 = 'built-in'                   # Case insensitive regex substring
# 5 = '^built-in retina display$'  # Case insensitive regex match
# 8 = ['secondary']        # You can specify multiple patterns. The first matching pattern will be used
9 = ['secondary']        # You can specify multiple patterns. The first matching pattern will be used
